#!/usr/bin/env python3
import os
from http.server import HTTPServer, BaseHTTPRequestHandler
import logging

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(
    level=logging.INFO,
    format='%(asctime)s - %(levelname)s - %(message)s'
)
logger = logging.getLogger(__name__)

class SimpleHandler(BaseHTTPRequestHandler):
    def do_GET(self):
        logger.info(f"GET –∑–∞–ø—Ä–æ—Å: {self.path}")
        
        if self.path in ['/', '/health', '/status']:
            self.send_response(200)
            self.send_header('Content-type', 'text/plain; charset=utf-8')
            self.end_headers()
            response = "OK - Bot is running!"
            self.wfile.write(response.encode('utf-8'))
            logger.info("–û—Ç–ø—Ä–∞–≤–ª–µ–Ω –æ—Ç–≤–µ—Ç: 200 OK")
        else:
            self.send_response(404)
            self.send_header('Content-type', 'text/plain; charset=utf-8')
            self.end_headers()
            response = "Not Found"
            self.wfile.write(response.encode('utf-8'))
            logger.info("–û—Ç–ø—Ä–∞–≤–ª–µ–Ω –æ—Ç–≤–µ—Ç: 404 Not Found")
    
    def log_message(self, format, *args):
        logger.info(f"HTTP: {format % args}")

def main():
    try:
        # –ü–æ–ª—É—á–∞–µ–º –ø–æ—Ä—Ç –∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π –æ–∫—Ä—É–∂–µ–Ω–∏—è Railway
        port = int(os.environ.get("PORT", 8000))
        logger.info(f"üöÄ –ó–∞–ø—É—Å–∫ —Å–µ—Ä–≤–µ—Ä–∞ –Ω–∞ –ø–æ—Ä—Ç—É {port}")
        
        # –°–æ–∑–¥–∞–µ–º —Å–µ—Ä–≤–µ—Ä
        server = HTTPServer(('0.0.0.0', port), SimpleHandler)
        logger.info(f"‚úÖ –°–µ—Ä–≤–µ—Ä —Å–æ–∑–¥–∞–Ω –Ω–∞ 0.0.0.0:{port}")
        
        # –ó–∞–ø—É—Å–∫–∞–µ–º —Å–µ—Ä–≤–µ—Ä
        logger.info("üåê –°–µ—Ä–≤–µ—Ä –∑–∞–ø—É—Å–∫–∞–µ—Ç—Å—è...")
        server.serve_forever()
        
    except Exception as e:
        logger.error(f"‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞: {e}")
        raise

if __name__ == "__main__":
    main() 